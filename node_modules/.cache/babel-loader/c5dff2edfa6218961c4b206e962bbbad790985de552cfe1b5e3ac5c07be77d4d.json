{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91830\\\\OneDrive\\\\Desktop\\\\sort-and-see\\\\sorting-visualiser\\\\src\\\\Components\\\\Header Contents\\\\TakeAndSort.js\";\nimport React from \"react\";\nimport * as Algo from '../';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GetAndSort() {\n  function generateArray() {\n    var size = 10;\n    let n;\n    let q = document.querySelector(\"#array\");\n    q.value = \"\";\n    for (let i = 0; i < size; i++) {\n      n = Math.floor(Math.random() * 50 + 1);\n      q.value += n;\n      if (i < size - 1) {\n        q.value += \", \";\n      }\n    }\n  }\n  let simulate = arr => {\n    // draw(arr)\n\n    // var q = document.querySelector(\"#sortingAlgo\")\n    // let algo = q.value\n    // if(algo==\"insertion\")\n    //     insertionSort(arr)\n    // else if(algo == \"selection\")\n    //     selectionSort(arr)\n    // else if(algo == \"bubble\")\n    //     bubbleSort(arr)   \n    // else if(algo == \"quick\")\n    //     quickSort(arr)\n    // else if(algo == \"merge\")\n    //     mergeSort(arr)\n  };\n  const validate = () => {\n    let q = document.querySelector(\"#array\");\n    var alertMsg = \"\";\n    var num = q.value.split(\" \").map(x => parseInt(x));\n    for (let i = 0; i < num.length; i++) {\n      if (isNaN(num[i])) {\n        alertMsg = \"Invalid Input\";\n        break;\n      }\n    }\n    if (alertMsg != \"\") {\n      alert(alertMsg);\n    } else {\n      simulate(num);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"array\",\n        placeholder: \"Enter Space Separated Array\",\n        className: \"form-control\",\n        \"aria-label\": \"Default\",\n        \"aria-describedby\": \"inputGroup-sizing-default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateArray,\n      className: \"btn btn-outline-primary\",\n      children: \"Generate random array\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: validate,\n      type: \"button\",\n      className: \"btn btn-dark\",\n      children: \"Start Sorting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = GetAndSort;\nexport default GetAndSort;\nvar _c;\n$RefreshReg$(_c, \"GetAndSort\");","map":{"version":3,"names":["React","Algo","GetAndSort","generateArray","size","n","q","document","querySelector","value","i","Math","floor","random","simulate","arr","validate","alertMsg","num","split","map","x","parseInt","length","isNaN","alert"],"sources":["C:/Users/91830/OneDrive/Desktop/sort-and-see/sorting-visualiser/src/Components/Header Contents/TakeAndSort.js"],"sourcesContent":["import React from \"react\";\r\nimport * as Algo from '../'\r\n\r\nfunction GetAndSort() {\r\n\r\n    function generateArray(){\r\n        var size = 10;\r\n        let n\r\n        let q = document.querySelector(\"#array\")\r\n        q.value = \"\"\r\n        for (let i = 0; i < size; i++) {\r\n            n = Math.floor((Math.random() * 50) + 1);\r\n            q.value += n\r\n            if(i<size-1){\r\n                q.value += \", \"\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    let simulate = (arr) => {\r\n        // draw(arr)\r\n    \r\n        \r\n        // var q = document.querySelector(\"#sortingAlgo\")\r\n        // let algo = q.value\r\n        // if(algo==\"insertion\")\r\n        //     insertionSort(arr)\r\n        // else if(algo == \"selection\")\r\n        //     selectionSort(arr)\r\n        // else if(algo == \"bubble\")\r\n        //     bubbleSort(arr)   \r\n        // else if(algo == \"quick\")\r\n        //     quickSort(arr)\r\n        // else if(algo == \"merge\")\r\n        //     mergeSort(arr)\r\n    }\r\n\r\n    const validate = () => {\r\n        let q = document.querySelector(\"#array\")\r\n        var alertMsg = \"\"\r\n        var num = q.value.split(\" \").map(x => parseInt(x)); \r\n        for (let i = 0; i < num.length; i++) {\r\n            if(isNaN(num[i])){\r\n                alertMsg = \"Invalid Input\"\r\n                break\r\n            }\r\n        }\r\n        if(alertMsg!=\"\"){\r\n            alert(alertMsg)\r\n        }\r\n        else{\r\n            simulate(num)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"text\" id=\"array\" placeholder=\"Enter Space Separated Array\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" />\r\n            </div>\r\n\r\n            <button onClick={generateArray} className=\"btn btn-outline-primary\">Generate random array</button>\r\n\r\n            <button onClick={validate} type=\"button\" className=\"btn btn-dark\">Start Sorting</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GetAndSort;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,IAAI,MAAM,KAAK;AAAA;AAAA;AAE3B,SAASC,UAAU,GAAG;EAElB,SAASC,aAAa,GAAE;IACpB,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIC,CAAC;IACL,IAAIC,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACxCF,CAAC,CAACG,KAAK,GAAG,EAAE;IACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,IAAI,EAAEM,CAAC,EAAE,EAAE;MAC3BL,CAAC,GAAGM,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,GAAI,CAAC,CAAC;MACxCP,CAAC,CAACG,KAAK,IAAIJ,CAAC;MACZ,IAAGK,CAAC,GAACN,IAAI,GAAC,CAAC,EAAC;QACRE,CAAC,CAACG,KAAK,IAAI,IAAI;MACnB;IACJ;EACJ;EAGA,IAAIK,QAAQ,GAAIC,GAAG,IAAK;IACpB;;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EAED,MAAMC,QAAQ,GAAG,MAAM;IACnB,IAAIV,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACxC,IAAIS,QAAQ,GAAG,EAAE;IACjB,IAAIC,GAAG,GAAGZ,CAAC,CAACG,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAAC,CAAC;IAClD,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGQ,GAAG,CAACK,MAAM,EAAEb,CAAC,EAAE,EAAE;MACjC,IAAGc,KAAK,CAACN,GAAG,CAACR,CAAC,CAAC,CAAC,EAAC;QACbO,QAAQ,GAAG,eAAe;QAC1B;MACJ;IACJ;IACA,IAAGA,QAAQ,IAAE,EAAE,EAAC;MACZQ,KAAK,CAACR,QAAQ,CAAC;IACnB,CAAC,MACG;MACAH,QAAQ,CAACI,GAAG,CAAC;IACjB;EACJ,CAAC;EAGD,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,kBAAkB;MAAA,uBAC7B;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,OAAO;QAAC,WAAW,EAAC,6BAA6B;QAAC,SAAS,EAAC,cAAc;QAAC,cAAW,SAAS;QAAC,oBAAiB;MAA2B;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACnK,eAEN;MAAQ,OAAO,EAAEf,aAAc;MAAC,SAAS,EAAC,yBAAyB;MAAA,UAAC;IAAqB;MAAA;MAAA;MAAA;IAAA,QAAS,eAElG;MAAQ,OAAO,EAAEa,QAAS;MAAC,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAC,cAAc;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBACzF;AAEX;AAAC,KAjEQd,UAAU;AAmEnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}